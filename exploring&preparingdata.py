# -*- coding: utf-8 -*-
"""Exploring&PreparingData.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17R1G736lMjsQiZPC3i9BvTOj1niMdjf1
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

import requests
import io

URL = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-DS0321EN-SkillsNetwork/datasets/dataset_part_2.csv"
response = requests.get(URL)

# Read into pandas DataFrame
df = pd.read_csv(io.StringIO(response.text))

# Display first few rows
df.head()

sns.catplot(y="PayloadMass", x="FlightNumber", hue="Class", data=df, aspect = 5)
plt.xlabel("Flight Number",fontsize=20)
plt.ylabel("Pay load Mass (kg)",fontsize=20)
plt.show()

sns.catplot(x='FlightNumber', y='LaunchSite', hue="Class", data=df, aspect=5)
plt.xlabel("Flight Number", fontsize=20)
plt.ylabel("lauch Site")
plt.show()

sns.catplot(x='PayloadMass',y='LaunchSite', hue="Class", data=df, aspect=5)
plt.xlabel("pay Load Mass(KG)")
plt.ylabel("Lauch Site")
plt.show()

orbit_success= df.groupby('Orbit', as_index=False)['Class'].mean()
sns.barplot(data=orbit_success,x='Orbit',y='Class')
plt.show()

sns.catplot(x='FlightNumber', y='Orbit', hue='Class', data=df, aspect=5 )

plt.title('Flight Number vs Orbit with Mission Class Outcome')
plt.xlabel('Flight Number')
plt.ylabel('Orbit')
plt.legend(title='Mission Class (1 = Success, 0 = Failure)')
plt.show()

sns.catplot(
    data=df,
    x='PayloadMass',
    y='Orbit',
    hue='Class',
    aspect=5
)

plt.title('Payload Mass vs Orbit with Mission Outcome')
plt.xlabel('Payload Mass (kg)')
plt.ylabel('Orbit')
plt.legend(title='Mission Class (1 = Success, 0 = Failure)')
plt.show()

year=[]
def Extract_year():
    for i in df["Date"]:
        year.append(i.split("-")[0])
    return year
Extract_year()
df['Date'] = year
df.head()

sns.lineplot(data=df, x='Date', y='Class', marker='o')

plt.title('Yearly Success Rate of Launches')
plt.xlabel('Year')
plt.ylabel('Success Rate')
plt.show()

# Apply OneHotEncoding using pandas get_dummies
features_one_hot = pd.get_dummies(df,
                                  columns=['Orbit', 'LaunchSite', 'LandingPad', 'Serial'])

# Display the first few rows
features_one_hot.head()

