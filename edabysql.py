# -*- coding: utf-8 -*-
"""EDABySQL.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17R1G736lMjsQiZPC3i9BvTOj1niMdjf1
"""

!pip install sqlalchemy==1.3.9

!pip install ipython-sql
!pip install ipython-sql prettytable

# Commented out IPython magic to ensure Python compatibility.
# %load_ext sql

import csv, sqlite3
import prettytable
prettytable.DEFAULT = 'DEFAULT'

con = sqlite3.connect("my_data1.db")
cur = con.cursor()

!pip install -q pandas

# Commented out IPython magic to ensure Python compatibility.
# %sql sqlite:///my_data1.db

import pandas as pd
df = pd.read_csv("https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBM-DS0321EN-SkillsNetwork/labs/module_2/data/Spacex.csv")
df.to_sql("SPACEXTBL", con, if_exists='replace', index=False,method="multi")

# Commented out IPython magic to ensure Python compatibility.
#DROP THE TABLE IF EXISTS

# %sql DROP TABLE IF EXISTS SPACEXTABLE;

# Commented out IPython magic to ensure Python compatibility.
# %sql create table SPACEXTABLE as select * from SPACEXTBL where Date is not null

# Commented out IPython magic to ensure Python compatibility.
# %sql select distinct(Launch_Site) from SPACEXTABLE;

# Commented out IPython magic to ensure Python compatibility.
# %sql select * from SPACEXTABLE where Launch_Site like 'CCA%' limit 5;

# Commented out IPython magic to ensure Python compatibility.
# %sql select SUM(PAYLOAD_MASS__KG_) from SPACEXTABLE where Customer='NASA (CRS)';

# Commented out IPython magic to ensure Python compatibility.
# %sql select AVG(PAYLOAD_MASS__KG_) from SPACEXTABLE where Booster_Version='F9 v1.1';

# Commented out IPython magic to ensure Python compatibility.
# %sql select MIN(Date) AS First_Successful_Ground_Landing FROM SPACEXTABLE WHERE Landing_Outcome like 'Success%';

# Commented out IPython magic to ensure Python compatibility.
# %sql SELECT Booster_Version FROM SPACEXTABLE WHERE Landing_Outcome = 'Success (drone ship)' AND PAYLOAD_MASS__KG_ > 4000 AND PAYLOAD_MASS__KG_ < 6000;

# Commented out IPython magic to ensure Python compatibility.
# %sql SELECT Mission_Outcome, COUNT(*) AS Total_Count FROM SPACEXTABLE GROUP BY Mission_Outcome;

# Commented out IPython magic to ensure Python compatibility.
# %sql SELECT Booster_Version FROM SPACEXTABLE WHERE PAYLOAD_MASS__KG_ = (SELECT MAX(PAYLOAD_MASS__KG_) FROM SPACEXTABLE);

# Commented out IPython magic to ensure Python compatibility.
# %sql SELECT  substr(Date, 6, 2) AS Month, Booster_Version, Launch_Site,Landing_Outcome FROM SPACEXTABLE WHERE Landing_Outcome LIKE 'Failure (drone ship)' AND substr(Date, 1, 4) = '2015';

# Commented out IPython magic to ensure Python compatibility.
# %sql SELECT Landing_Outcome,COUNT(*) AS Outcome_Count FROM SPACEXTABLE WHERE Date BETWEEN '2010-06-04' AND '2017-03-20' GROUP BY Landing_Outcome ORDER BY Outcome_Count DESC;

